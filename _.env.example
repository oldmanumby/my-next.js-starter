# .ENV Example

While .env and .env.local files should always be in your .gitignore because they contain actual secrets and credentials, the .env.example file should only contain:

The names of required environment variables
Placeholder values (like YOUR_API_KEY_HERE)
Non-sensitive default values where appropriate
Helpful comments explaining what each variable is for

## Purpose

The `.env.example` file serves several important purposes in a project:

1. **Documentation of environment variables**: It provides a template that lists all the environment variables your application uses, showing developers which variables need to be configured.

2. **Onboarding guide**: It helps new developers quickly set up their local development environment by showing them exactly what environment variables they need to define.

3. **Security**: It prevents accidentally committing actual secret values to your repository. Your actual `.env` file with real values should be in `.gitignore`, while `.env.example` is committed with placeholder values.

4. **Standardization**: It ensures consistency across different development environments by establishing which variables are required.

To use it effectively:
- List all required environment variables
- Use placeholder values or detailed comments explaining the expected format
- Include non-sensitive default values where appropriate
- Keep it updated whenever you add new environment variables

## Example structure

```
# API Configuration
API_URL=https://api.example.com
API_KEY=your_api_key_here

# Database Configuration
DB_HOST=localhost
DB_PORT=5432
DB_NAME=myapp
DB_USER=dbuser
DB_PASSWORD=your_password_here

# Feature Flags
ENABLE_NEW_FEATURE=false
```

Developers would copy this file to create their own `.env` file with real values for their environment.
